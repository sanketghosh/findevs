// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Currency {
  AED // United Arab Emirates Dirham
  AFN // Afghan Afghani
  ALL // Albanian Lek
  AMD // Armenian Dram
  ANG // Netherlands Antillean Guilder
  AOA // Angolan Kwanza
  ARS // Argentine Peso
  AUD // Australian Dollar
  AWG // Aruban Florin
  AZN // Azerbaijani Manat
  BAM // Bosnia-Herzegovina Convertible Mark
  BBD // Barbadian Dollar
  BDT // Bangladeshi Taka
  BGN // Bulgarian Lev
  BHD // Bahraini Dinar
  BIF // Burundian Franc
  BMD // Bermudian Dollar
  BND // Brunei Dollar
  BOB // Bolivian Boliviano
  BRL // Brazilian Real
  BSD // Bahamian Dollar
  BTN // Bhutanese Ngultrum
  BWP // Botswanan Pula
  BYN // Belarusian Ruble
  BZD // Belize Dollar
  CAD // Canadian Dollar
  CDF // Congolese Franc
  CHF // Swiss Franc
  CLP // Chilean Peso
  CNY // Chinese Yuan
  COP // Colombian Peso
  CRC // Costa Rican Colón
  CUP // Cuban Peso
  CVE // Cape Verdean Escudo
  CZK // Czech Koruna
  DJF // Djiboutian Franc
  DKK // Danish Krone
  DOP // Dominican Peso
  DZD // Algerian Dinar
  EGP // Egyptian Pound
  ERN // Eritrean Nakfa
  ETB // Ethiopian Birr
  EUR // Euro
  FJD // Fijian Dollar
  FKP // Falkland Islands Pound
  FOK // Faroese Króna
  GBP // British Pound Sterling
  GEL // Georgian Lari
  GGP // Guernsey Pound
  GHS // Ghanaian Cedi
  GIP // Gibraltar Pound
  GMD // Gambian Dalasi
  GNF // Guinean Franc
  GTQ // Guatemalan Quetzal
  GYD // Guyanaese Dollar
  HKD // Hong Kong Dollar
  HNL // Honduran Lempira
  HRK // Croatian Kuna
  HTG // Haitian Gourde
  HUF // Hungarian Forint
  IDR // Indonesian Rupiah
  ILS // Israeli New Shekel
  IMP // Isle of Man Pound
  INR // Indian Rupee
  IQD // Iraqi Dinar
  IRR // Iranian Rial
  ISK // Icelandic Króna
  JEP // Jersey Pound
  JMD // Jamaican Dollar
  JOD // Jordanian Dinar
  JPY // Japanese Yen
  KES // Kenyan Shilling
  KGS // Kyrgystani Som
  KHR // Cambodian Riel
  KID // Kiribati Dollar
  KMF // Comorian Franc
  KRW // South Korean Won
  KWD // Kuwaiti Dinar
  KYD // Cayman Islands Dollar
  KZT // Kazakhstani Tenge
  LAK // Lao Kip
  LBP // Lebanese Pound
  LKR // Sri Lankan Rupee
  LRD // Liberian Dollar
  LSL // Lesotho Loti
  LYD // Libyan Dinar
  MAD // Moroccan Dirham
  MDL // Moldovan Leu
  MGA // Malagasy Ariary
  MKD // Macedonian Denar
  MMK // Myanmar Kyat
  MNT // Mongolian Tugrik
  MOP // Macanese Pataca
  MRU // Mauritanian Ouguiya
  MUR // Mauritian Rupee
  MVR // Maldivian Rufiyaa
  MWK // Malawian Kwacha
  MXN // Mexican Peso
  MYR // Malaysian Ringgit
  MZN // Mozambican Metical
  NAD // Namibian Dollar
  NGN // Nigerian Naira
  NIO // Nicaraguan Córdoba
  NOK // Norwegian Krone
  NPR // Nepalese Rupee
  NZD // New Zealand Dollar
  OMR // Omani Rial
  PAB // Panamanian Balboa
  PEN // Peruvian Sol
  PGK // Papua New Guinean Kina
  PHP // Philippine Peso
  PKR // Pakistani Rupee
  PLN // Polish Zloty
  PYG // Paraguayan Guarani
  QAR // Qatari Rial
  RON // Romanian Leu
  RSD // Serbian Dinar
  RUB // Russian Ruble
  RWF // Rwandan Franc
  SAR // Saudi Riyal
  SBD // Solomon Islands Dollar
  SCR // Seychellois Rupee
  SDG // Sudanese Pound
  SEK // Swedish Krona
  SGD // Singapore Dollar
  SHP // Saint Helena Pound
  SLE // Sierra Leonean Leone
  SOS // Somali Shilling
  SRD // Surinamese Dollar
  SSP // South Sudanese Pound
  STN // São Tomé and Príncipe Dobra
  SYP // Syrian Pound
  SZL // Eswatini Lilangeni
  THB // Thai Baht
  TJS // Tajikistani Somoni
  TMT // Turkmenistani Manat
  TND // Tunisian Dinar
  TOP // Tongan Paʻanga
  TRY // Turkish Lira
  TTD // Trinidad and Tobago Dollar
  TVD // Tuvaluan Dollar
  TWD // New Taiwan Dollar
  TZS // Tanzanian Shilling
  UAH // Ukrainian Hryvnia
  UGX // Ugandan Shilling
  USD // United States Dollar
  UYU // Uruguayan Peso
  UZS // Uzbekistani Som
  VES // Venezuelan Bolívar Soberano
  VND // Vietnamese Dong
  VUV // Vanuatu Vatu
  WST // Samoan Tala
  XAF // Central African CFA Franc
  XCD // East Caribbean Dollar
  XDR // Special Drawing Rights
  XOF // West African CFA Franc
  XPF // CFP Franc
  YER // Yemeni Rial
  ZAR // South African Rand
  ZMW // Zambian Kwacha
  ZWL // Zimbabwean Dollar
}

enum JobType {
  FullTime
  PartTime
  Internship
  Contract
  Volunteer
}

enum Workplace {
  Remote
  Hybrid
  OnSite
  InCountryRemote
}

enum Seniority {
  EntryLevel
  MidLevel
  Senior
  Manager
  Director
  Executive
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  name          String?
  emailVerified Boolean
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  sessions      Session[]
  accounts      Account[]
  jobs          Job[]
  bookmarks     Bookmark[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Job {
  id              String    @id @default(cuid())
  slug            String    @unique
  title           String
  description     String
  companyName     String
  jobType         JobType
  workplace       Workplace
  seniority       Seniority
  city            String?
  country         String
  address         String?
  employerEmail   String?
  employerWebsite String?
  salary          Int
  companyLogoUrl  String?
  currency        Currency?
  approved        Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User?      @relation(fields: [userId], references: [id])
  userId    String?
  bookmarks Bookmark[]

  @@map("jobs")
}

model Bookmark {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobId  String
  job    Job    @relation(fields: [jobId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, jobId])
  @@map("bookmarks")
}
